/* Trying out new stuffs in the selectors */

form[class="form-contact"] {
	padding: 20px 24px;
	background: #f4f7f8;
}

div[id="container"] {
	max-width: 500px;
	margin: auto;
}

input[type="text"] {
	background: #fdfee6;
}

input[type="text"] {
	background: #fdfee6;
}

input[type="button"],
input[type="reset"],
input[type="submit"] {
	cursor: pointer;
}

a[target="_blank"] {
	color: #39add1;
	text-decoration: none;
	border-bottom: 1px dotted;
}


/* selector with symbols >, + , ~ */


/* Select the direct sibling to the form and change the properties */

form > a {
	padding: 10px;
}


/* Select the immediate sibling and change the properties */

h1 + p {
	color: #fff;
}


/* Select the all btn classes after the first btn classes */

.btn ~ .btn {
	margin-left: 20px;
}


/* Structural pseudo class */

li:first-child {
	background-color: #1ab394;
}

li:last-child {
	background: #000;
}


/* only selector targets if the parent element has only one child element */

:only {
	background: #ed5565;
}


/* Empty selector targets when the elements doesn't contain any content in it */

:empty {
	background: #ededed;
}


/* Substring matching attribute selector */


/*  Begins with selector */


/* This ^ sign indicates the begins with option */

a[href^="http://"] {
	color: green;
}


/* Ends with selector */


/* This $ sign indicates the ends with option */

a[href$=".pdf"] {
	color: violet;
}


/* contain with selector */


/* sign astricks shows that contains that value in the element */

a[href*="downloads"] {
	color: yellow;
}


/* you can also specify or half of the name also*/

a[href*="down"] {
	color: blue;
}


/* Other psedo classes */


/* nth child pseudo class structural class */

li:nth-child(even) {
	background: #52bab3;
	color: #fff;
}

li:nth-child(3) {
	background: #52bab3;
	color: #fff;
}


/* You can also add expressions to the nth child */

li:nth-child(an+b) {}

li:nth-child(2n+4) {}

li:nth-child(-n+3) {}


/* nth of type selector */


/* to select a specific type regardless of the list */

li:nth-of-type(4) {}


/* This will select the last li type regardless of the list */

li:nth-last-of-type(2) {}


/* root and the target pseudo classes */


/* root selector selects the top most value in the page */

:root {}


/* :not selector which refer that need not select those selectors */

div:not(any specific id, or class, or anything) {}

input:not([type="submit"]) {}

li:not(:first-child) {}


/* pseudo classes and pseudo elements */


/************ Pseudo elements **********/


/* This pseudo elements comes handy when you need to make the html clearner and when you dont have any access to the markup then you can use the pseudo elements.. This is amazing piece of creation :) */


/* : defines the pseudo classes and the :: defines the pseudo elements but the browser with take both for both classes and the elements */

p::first-line {
	color: #ededed;
	font-weight: 400;
}


/* You can target the first letter also using the pseudo elements :) */

p::first-letter {
	color: #ed5565;
	font-weight: 800;
}


/* before and the after pseudo elements */